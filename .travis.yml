# vim: set ai si sta et sw=2 sts=2 fenc=utf-8 nobomb eol ff=unix ft=yaml:
git:
  depth: 50
cache:
  pip: true
  npm: true
stages:
  - name: "Lint"
  - name: "Build"
  - name: "Tag"
    if: type = push AND tag IS blank AND branch =~ master|devel
  - name: "Release"
    if: tag IS present
jobs:
  include:
    - stage: "Lint"
      name: "Markdown Lint"
      os: "linux"
      dist: "bionic"
      language: "node_js"
      node_js:
        - "12.8.0"
      install: "skip"
      script: "make markdownlint"
    - stage: "Lint"
      name: "Dockerfile lint"
      os: "linux"
      dist: "bionic"
      language: "minimal"
      script: "make dockerfilelint"
    - stage: "Lint"
      name: "YAML lint"
      os: "linux"
      dist: "bionic"
      language: "python"
      python:
        - "3.7"
      install: "skip"
      script: "make yamllint"
    - stage: "Build"
      name: "Build docker image"
      os: "linux"
      dist: "bionic"
      language: "minimal"
      script: make build
    - stage: "Tag"
      name: "Create repository tag"
      os: "linux"
      dist: "bionic"
      language: "minimal"
      script:
        - export TAG=v$(grep -P '^VERSION = ' Makefile | sed -r -e 's/VERSION = (.*)$/\1/')
        - make Dockerfile
        - git add -f Dockerfile
        - git config user.name "Travis CI"
        - git config user.email "travis@travis-ci.org"
        - git commit -m"ðŸ”– release ${TAG}"
        - git tag ${TAG}
        - git remote remove origin
        - git remote add origin https://${GITHUB_OAUTH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git push --delete origin :${TAG} || true
        - git push --force --tags origin ${TAG}:${TAG}
    - stage: "Release"
      name: "Release assets"
      os: "linux"
      dist: "bionic"
      language: "minimal"
      script:
        - docker build --target=release --tag=release-assets:latest -f Dockerfile .
        - docker create --name=assets-container release-assets:latest
        - docker run --rm -it release-assets:latest find / -maxdepth 1 -type f -name \*.tar.gz -print0 | xargs -0 -I{} docker cp assets-container:"{}" .
      deploy:
        provider: "releases"
        skip_cleanup: true
        draft: true
        api_key: ${GITHUB_OAUTH_TOKEN}
        file_glob: true
        file: "*.tar.gz"
        overwrite: true
        on:
          tags: true
